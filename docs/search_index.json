[
["index.html", "R Fundamentals 1 Preparations", " R Fundamentals Kosmas Hench 1 Preparations This is going to develop into a collection of scripts based on the R fundamentals workshop by A. Vining. install.packages(‚Äòtidyverse‚Äô) download.file(url = &quot;https://ndownloader.figshare.com/files/2292169&quot;, destfile = &quot;survey_data.csv&quot;) "],
["day-1.html", "2 Day 1 2.1 Hunting Error messages 2.2 Basic Data Types 2.3 Basic Data Structures", " 2 Day 1 2.1 Hunting Error messages The internet is your friend üòÑ. The language of the current R session can be changed to english using Sys.setenv() (this only worked once per session for me ‚Äî so to toggle back to my initial language I had to restart the r-session) Sys.setenv(LANGUAGE=&quot;de&quot;) x Sys.setenv(LANGUAGE=&quot;en&quot;) x 2.2 Basic Data Types Logical ---&gt; Integer ---&gt; Numeric ---&gt; Character [FALSE, TRUE] [0, 1] [0.0, 1.0] [‚Äú0.0‚Äù, ‚Äú1.0‚Äù] a &lt;- TRUE c &lt;- 1 class(c) #&gt; [1] &quot;numeric&quot; b &lt;- as.integer(1) class(b) #&gt; [1] &quot;integer&quot; a + c #&gt; [1] 2 d &lt;- &quot;1&quot; as.numeric(&quot;1&quot;) #&gt; [1] 1 as.numeric(&quot;TRUE&quot;) #&gt; Warning: NAs introduced by coercion #&gt; [1] NA c == d #&gt; [1] TRUE a == c #&gt; [1] TRUE a == d #&gt; [1] FALSE identical(c, d) #&gt; [1] FALSE identical(a, c) #&gt; [1] FALSE 2 == 3 #&gt; [1] FALSE 2.3 Basic Data Structures 1D Row/Column 2D Atomic Vectors ------------------&gt; Matrices | | recursive | | Properties Of | | Lists &lt;--------------------- Data Frames Properties Of 2.3.1 Atomic Vectors weight_g &lt;- c(50, 60, 65, 80) weight_g #&gt; [1] 50 60 65 80 animals &lt;- c(&quot;kinkajous&quot;, &quot;coatis&quot;, &quot;capuchins&quot;) animals #&gt; [1] &quot;kinkajous&quot; &quot;coatis&quot; &quot;capuchins&quot; empty &lt;- vector(length = 5) empty #&gt; [1] FALSE FALSE FALSE FALSE FALSE length(weight_g) #&gt; [1] 4 length(animals) #&gt; [1] 3 str(weight_g) #&gt; num [1:4] 50 60 65 80 num_char &lt;- c(1, 2, 3, &quot;a&quot;) num_logical &lt;- c(1, 2, 3, TRUE) char_logical &lt;- c(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, TRUE) tricky &lt;- c(1, 2, 3, &quot;4&quot;) num_char #&gt; [1] &quot;1&quot; &quot;2&quot; &quot;3&quot; &quot;a&quot; Subsetting animals[2] #&gt; [1] &quot;coatis&quot; animals[c(2,3)] #&gt; [1] &quot;coatis&quot; &quot;capuchins&quot; weight_g[2:4] #&gt; [1] 60 65 80 2:4 #&gt; [1] 2 3 4 weight_g[c(2, 2, 2, 3)] #&gt; [1] 60 60 60 65 weight_g[-2] #&gt; [1] 50 65 80 2.3.2 Conditional Subsetting weight_g &gt; 50 #&gt; [1] FALSE TRUE TRUE TRUE weight_g[weight_g &gt; 50] #&gt; [1] 60 65 80 weight_g[weight_g &gt; 50 &amp; weight_g &lt; 70] #&gt; [1] 60 65 weight_g[weight_g &lt;= 50 | weight_g &gt;= 70] #&gt; [1] 50 80 animals2 &lt;- c(&quot;kinkajous&quot;, &quot;kinkajous&quot;, &quot;coatis&quot;, &quot;meerkats&quot;) animals2 %in% c(animals) #&gt; [1] TRUE TRUE TRUE FALSE animals2[animals2 %in% c(animals)] #&gt; [1] &quot;kinkajous&quot; &quot;kinkajous&quot; &quot;coatis&quot; 2.3.3 Matrices sequence_vector &lt;- 1:9 sequence_vector #&gt; [1] 1 2 3 4 5 6 7 8 9 example_matrix1 &lt;- matrix(data = sequence_vector, nrow = 3, ncol = 3) example_matrix1 #&gt; [,1] [,2] [,3] #&gt; [1,] 1 4 7 #&gt; [2,] 2 5 8 #&gt; [3,] 3 6 9 example_matrix2 &lt;- matrix(sequence_vector, 3, byrow = TRUE) example_matrix2 #&gt; [,1] [,2] [,3] #&gt; [1,] 1 2 3 #&gt; [2,] 4 5 6 #&gt; [3,] 7 8 9 str(example_matrix1) #&gt; int [1:3, 1:3] 1 2 3 4 5 6 7 8 9 str(example_matrix2) #&gt; int [1:3, 1:3] 1 4 7 2 5 8 3 6 9 length(example_matrix1) #&gt; [1] 9 dim(example_matrix1) #&gt; [1] 3 3 nrow(example_matrix1) #&gt; [1] 3 ncol(example_matrix1) #&gt; [1] 3 example_matrix1[4:7] # ! not a helpful way to subset matrices #&gt; [1] 4 5 6 7 example_matrix1[2, 3] # example_matrix1[&lt;rows&gt;, &lt;columns&gt;] #&gt; [1] 8 example_matrix1[2:3, c(1, 3)] #&gt; [,1] [,2] #&gt; [1,] 2 8 #&gt; [2,] 3 9 2.3.4 Lists animals_all &lt;- list(animals, animals2) animals_all #&gt; [[1]] #&gt; [1] &quot;kinkajous&quot; &quot;coatis&quot; &quot;capuchins&quot; #&gt; #&gt; [[2]] #&gt; [1] &quot;kinkajous&quot; &quot;kinkajous&quot; &quot;coatis&quot; &quot;meerkats&quot; animals_all[1] #&gt; [[1]] #&gt; [1] &quot;kinkajous&quot; &quot;coatis&quot; &quot;capuchins&quot; str(animals_all) #&gt; List of 2 #&gt; $ : chr [1:3] &quot;kinkajous&quot; &quot;coatis&quot; &quot;capuchins&quot; #&gt; $ : chr [1:4] &quot;kinkajous&quot; &quot;kinkajous&quot; &quot;coatis&quot; &quot;meerkats&quot; str(animals_all[1]) #&gt; List of 1 #&gt; $ : chr [1:3] &quot;kinkajous&quot; &quot;coatis&quot; &quot;capuchins&quot; animals_all[[1]] #&gt; [1] &quot;kinkajous&quot; &quot;coatis&quot; &quot;capuchins&quot; animals_all_combined &lt;- c(animals_all, weight_g) # for demonstration purpose animals_all_combined #&gt; [[1]] #&gt; [1] &quot;kinkajous&quot; &quot;coatis&quot; &quot;capuchins&quot; #&gt; #&gt; [[2]] #&gt; [1] &quot;kinkajous&quot; &quot;kinkajous&quot; &quot;coatis&quot; &quot;meerkats&quot; #&gt; #&gt; [[3]] #&gt; [1] 50 #&gt; #&gt; [[4]] #&gt; [1] 60 #&gt; #&gt; [[5]] #&gt; [1] 65 #&gt; #&gt; [[6]] #&gt; [1] 80 animals_all_combined &lt;- c(animals_all, list(weight_g)) animals_all_combined #&gt; [[1]] #&gt; [1] &quot;kinkajous&quot; &quot;coatis&quot; &quot;capuchins&quot; #&gt; #&gt; [[2]] #&gt; [1] &quot;kinkajous&quot; &quot;kinkajous&quot; &quot;coatis&quot; &quot;meerkats&quot; #&gt; #&gt; [[3]] #&gt; [1] 50 60 65 80 list_challange1 &lt;- animals_all_combined[1][1] list_challange2 &lt;- animals_all_combined[[c(1,2)]] list_challange1 #&gt; [[1]] #&gt; [1] &quot;kinkajous&quot; &quot;coatis&quot; &quot;capuchins&quot; list_challange2 #&gt; [1] &quot;coatis&quot; "],
["day-2.html", "3 Day 2", " 3 Day 2 library(tidyverse) read_csv(&quot;survey_data.csv&quot;) "]
]
